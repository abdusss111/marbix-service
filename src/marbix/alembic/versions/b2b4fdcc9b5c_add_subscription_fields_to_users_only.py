"""add_subscription_fields_to_users_only

Revision ID: b2b4fdcc9b5c
Revises: 2f1db3c7a9a1
Create Date: 2025-08-18 10:36:17.025096

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'b2b4fdcc9b5c'
down_revision: Union[str, Sequence[str], None] = '2f1db3c7a9a1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('prompts', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('prompts', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    op.create_index(op.f('ix_prompts_id'), 'prompts', ['id'], unique=False)
    
    # Create the enum type first
    subscription_status_enum = postgresql.ENUM('FREE', 'PENDING_PRO', 'PRO', name='subscriptionstatus')
    subscription_status_enum.create(op.get_bind())
    
    # Now add the columns
    op.add_column('users', sa.Column('subscription_status', subscription_status_enum, nullable=False, server_default='FREE'))
    op.add_column('users', sa.Column('subscription_updated_at', sa.DateTime(), nullable=True))
    op.add_column('users', sa.Column('subscription_granted_by', sa.String(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'subscription_granted_by')
    op.drop_column('users', 'subscription_updated_at')
    op.drop_column('users', 'subscription_status')
    
    # Drop the enum type
    subscription_status_enum = postgresql.ENUM('FREE', 'PENDING_PRO', 'PRO', name='subscriptionstatus')
    subscription_status_enum.drop(op.get_bind())
    
    op.drop_index(op.f('ix_prompts_id'), table_name='prompts')
    op.alter_column('prompts', 'updated_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('prompts', 'created_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    # ### end Alembic commands ###
